(program (config CONFIGURATION (config_struct (card_val_override CARD_VALUE_OVERRIDE (cards ace = (basicExpression 11) ;) (cards king = (basicExpression 10) ;) (cards queen = (basicExpression 10) ;) (cards joker = (basicExpression FALSE) ;) (roles roles = DEALER and PLAYER ;) END CARD_VALUE_OVERRIDE)) (config_struct (actions ACTIONS (user_actions set HIT does (user_actions_block pickCard()) ;) (user_actions set HITHIDE does (user_actions_block pickCard()) and (user_actions_block hideCard()) ;) END ACTIONS)) (config_struct (variables_struct VARIABLES (variable_assignment set DEALER has (basicExpression score) ;) (variable_assignment set PLAYER has (basicExpression score) ;) END VARIABLES)) END CONFIGURATION) (game GAME (common_block COMMON (function on_turn() (func_statement (conditional if ( (expression (basicExpression score) (binaryOperator >=) (basicExpression 100)) ) (ifBlock (func_statement (variable player1_score = (expression (basicExpression 100)) ;))) else (elseBlock (func_statement (variable player1_score = (expression (basicExpression 100)) ;)) (func_statement (loop loop ( (expression (basicExpression player1_score) (binaryOperator <) (basicExpression 10)) ) (func_statement (variable player1_score = (expression (arithmeticExpression (basicExpression player1_score) + (basicExpression 1))) ;)) end loop))) end if)) end function) (function setup() (func_statement (variable score = (expression (basicExpression 0)) ;)) end function) END COMMON) (user_block USER_OVERRIDE DEALER (function on_put_config_user_action_here() (func_statement (variable player1_score = (expression (basicExpression 0)) ;)) end function) (function on_put_config_user_action_here() (func_statement (loop loop ( (expression (basicExpression player1_score) (binaryOperator <) (basicExpression 10)) ) (func_statement (loop loop ( (expression (basicExpression player1_score) (binaryOperator <) (basicExpression 10)) ) (func_statement (variable player1_score = (expression (arithmeticExpression (basicExpression player1_score) + (basicExpression 1))) ;)) end loop)) end loop)) end function) END USER_OVERRIDE) END GAME) (result_block RESULT (resultContent (conditional IF ( (expression (basicExpression player1_score) (binaryOperator >) (basicExpression player2_score)) ) (ifBlock (func_statement (variable player_1 = (expression (basicExpression WIN)) ;))) ELSE (elseBlock (func_statement (variable player_2 = (expression (basicExpression WIN)) ;))) END IF)) END RESULT) <EOF>)