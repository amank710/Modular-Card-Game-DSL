(program (config CONFIGURATION (config_struct (card_val_override CARD_VALUE_OVERRIDE (card_disable joker = FALSE ;) (roles roles = (role PLAYER) and (role DEALER) ;))) (config_struct (actions ACTIONS (user_actions set HIT does (user_actions_block pickCard) ;) (user_actions set STAY does (user_actions_block skipTurn) ;))) (config_struct (variable_declarations_struct VARIABLES (variable_declaration set (role_variable_declaration (role PLAYER) has (variable_name score) ;)) (variable_declaration set (role_variable_declaration (role PLAYER) has (variable_name input) ;)) (variable_declaration set (role_variable_declaration (role DEALER) has (variable_name score) ;)) (variable_declaration set (role_variable_declaration (role DEALER) has (variable_name input) ;)) (variable_declaration set (role_variable_declaration (role PLAYER) has (variable_name result) ;)) (variable_declaration set (role_variable_declaration (role DEALER) has (variable_name result) ;)) (variable_declaration set (role_variable_declaration (role DEALER) has (variable_name score) ;)) (variable_declaration set (role_variable_declaration (role PLAYER) has (variable_name score) ;))))) (game GAME (common_block COMMON (function (func_decl setup ( )) (func_statement (variableAssignment (variableAccessor (role DEALER) . (variable_name score)) = (expression (baseExpression (basicExpression 0))) ;)) (func_statement (variableAssignment (variableAccessor (role PLAYER) . (variable_name score)) = (expression (baseExpression (basicExpression 0))) ;)) end function)) (user_block USER_OVERRIDE (role PLAYER) (function (func_decl on_turn ( )) (func_statement (functionCall waitFor ( (expression (baseExpression (basicExpression HIT))) , (expression (baseExpression (basicExpression STAY))) )) ;) end function) (function (func_decl on_HIT ( )) (func_statement (variableAssignment (variableAccessor (role PLAYER) . (variable_name score)) = (expression (baseExpression (basicExpression (variableAccessor (role PLAYER) . (variable_name score)))) (arithmeticExpression + (expression (baseExpression (basicExpression (variableAccessor (role PLAYER) . (variable_name card))))))) ;)) end function) (function (func_decl on_STAY ( )) end function)) (user_block USER_OVERRIDE (role DEALER) (function (func_decl on_turn ( )) (func_statement (functionCall waitFor ( (expression (baseExpression (basicExpression HIT))) , (expression (baseExpression (basicExpression STAY))) )) ;) end function) (function (func_decl on_HIT ( )) (func_statement (variableAssignment (variableAccessor (role DEALER) . (variable_name score)) = (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name score)))) (arithmeticExpression + (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name card))))))) ;)) end function) (function (func_decl on_STAY ( )) end function))) (result RESULT (result_block (func_statement (conditional if ( (expression (baseExpression (groupedExpression ( (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name score)))) (binaryExpression (binaryOperator >) (expression (baseExpression (basicExpression 17))))) ))) (binaryExpression (binaryOperator and) (expression (baseExpression (groupedExpression ( (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name score)))) (binaryExpression (binaryOperator >) (expression (baseExpression (basicExpression (variableAccessor (role PLAYER) . (variable_name score))))))) )))))) ) (conditional_true (func_statement (variableAssignment (variableAccessor (role PLAYER) . (variable_name result)) = (expression (baseExpression (basicExpression LOST))) ;)) (func_statement (variableAssignment (variableAccessor (role DEALER) . (variable_name result)) = (expression (baseExpression (basicExpression WIN))) ;))) end if)) (func_statement (conditional if ( (expression (baseExpression (groupedExpression ( (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name score)))) (binaryExpression (binaryOperator >) (expression (baseExpression (basicExpression 17))))) ))) (binaryExpression (binaryOperator and) (expression (baseExpression (groupedExpression ( (expression (baseExpression (basicExpression (variableAccessor (role PLAYER) . (variable_name score)))) (binaryExpression (binaryOperator >) (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name score))))))) )))))) ) (conditional_true (func_statement (variableAssignment (variableAccessor (role PLAYER) . (variable_name result)) = (expression (baseExpression (basicExpression WIN))) ;)) (func_statement (variableAssignment (variableAccessor (role DEALER) . (variable_name result)) = (expression (baseExpression (basicExpression LOST))) ;))) end if)) (func_statement (conditional if ( (expression (baseExpression (basicExpression (variableAccessor (role PLAYER) . (variable_name score)))) (binaryExpression (binaryOperator >) (expression (baseExpression (basicExpression 21))))) ) (conditional_true (func_statement (variableAssignment (variableAccessor (role PLAYER) . (variable_name result)) = (expression (baseExpression (basicExpression LOST))) ;))) end if)) (func_statement (conditional if ( (expression (baseExpression (basicExpression (variableAccessor (role DEALER) . (variable_name score)))) (binaryExpression (binaryOperator >) (expression (baseExpression (basicExpression 21))))) ) (conditional_true (func_statement (variableAssignment (variableAccessor (role DEALER) . (variable_name result)) = (expression (baseExpression (basicExpression LOST))) ;))) end if)))) <EOF>)